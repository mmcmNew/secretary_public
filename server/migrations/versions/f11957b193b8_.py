"""empty message

Revision ID: f11957b193b8
Revises: ff0e7dea0f9d
Create Date: 2025-07-24 20:00:19.108377

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f11957b193b8'
down_revision = 'ff0e7dea0f9d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('chat_history',
    sa.Column('message_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('datetime', sa.DateTime(), nullable=False),
    sa.Column('text', sa.Text(), nullable=True),
    sa.Column('files', sa.Text(), nullable=True),
    sa.Column('position', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('message_id'),
    schema='communication'
    )
    op.create_table('quotes',
    sa.Column('quote_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('quote', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('quote_id'),
    schema='communication'
    )
    op.create_table('journal_entries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('journal_type', sa.String(length=50), nullable=True),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='content'
    )
    op.create_table('journal_schemas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_name', sa.String(length=200), nullable=False),
    sa.Column('fields', sa.JSON(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='content'
    )
    op.create_table('data_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('version_metadata', sa.JSON(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='productivity'
    )
    op.create_table('groups',
    sa.Column('GroupID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('GroupName', sa.String(length=255), nullable=True),
    sa.Column('Order', sa.Integer(), nullable=True),
    sa.Column('ChildesOrder', sa.JSON(), nullable=True),
    sa.Column('InGeneralList', sa.Boolean(), nullable=True),
    sa.Column('Deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('GroupID'),
    schema='productivity'
    )
    op.create_table('intervals',
    sa.Column('IntervalID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('IntervalName', sa.String(length=255), nullable=True),
    sa.Column('IntervalTitle', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('IntervalID'),
    schema='productivity'
    )
    op.create_table('lists',
    sa.Column('ListID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ListName', sa.String(length=255), nullable=True),
    sa.Column('Order', sa.Integer(), nullable=True),
    sa.Column('ChildesOrder', sa.JSON(), nullable=True),
    sa.Column('InGeneralList', sa.Boolean(), nullable=True),
    sa.Column('Deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('ListID'),
    schema='productivity'
    )
    op.create_table('priorities',
    sa.Column('PriorityID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('PriorityName', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('PriorityID'),
    schema='productivity'
    )
    op.create_table('projects',
    sa.Column('ProjectID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('ProjectName', sa.String(length=255), nullable=True),
    sa.Column('Order', sa.Integer(), nullable=True),
    sa.Column('Childes', sa.JSON(), nullable=True),
    sa.Column('Deleted', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('ProjectID'),
    schema='productivity'
    )
    op.create_table('statuses',
    sa.Column('StatusID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('StatusName', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('StatusID'),
    schema='productivity'
    )
    op.create_table('task_type_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('color', sa.String(length=20), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='productivity'
    )
    op.create_table('access_levels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('max_containers', sa.Integer(), nullable=True),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='users'
    )
    op.create_table('users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('user_name', sa.Text(), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('avatar_src', sa.Text(), nullable=True),
    sa.Column('last_dashboard_id', sa.Integer(), nullable=True),
    sa.Column('modules', sa.JSON(), nullable=True),
    sa.Column('access_level_id', sa.Integer(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('user_name'),
    schema='users'
    )
    op.create_table('dashboard',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('containers', sa.JSON(), nullable=True),
    sa.Column('timers', sa.JSON(), nullable=True),
    sa.Column('theme_mode', sa.String(length=20), nullable=True),
    sa.Column('calendar_settings', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='workspace'
    )
    op.create_table('journal_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('entry_id', sa.Integer(), nullable=False),
    sa.Column('field_name', sa.String(length=100), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['entry_id'], ['content.journal_entries.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='content'
    )
    op.create_table('group_project_relations',
    sa.Column('GroupID', sa.Integer(), nullable=False),
    sa.Column('ProjectID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['GroupID'], ['productivity.groups.GroupID'], ),
    sa.ForeignKeyConstraint(['ProjectID'], ['productivity.projects.ProjectID'], ),
    sa.PrimaryKeyConstraint('GroupID', 'ProjectID'),
    schema='productivity'
    )
    op.create_table('list_group_relations',
    sa.Column('ListID', sa.Integer(), nullable=False),
    sa.Column('GroupID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['GroupID'], ['productivity.groups.GroupID'], ),
    sa.ForeignKeyConstraint(['ListID'], ['productivity.lists.ListID'], ),
    sa.PrimaryKeyConstraint('ListID', 'GroupID'),
    schema='productivity'
    )
    op.create_table('list_project_relations',
    sa.Column('ListID', sa.Integer(), nullable=False),
    sa.Column('ProjectID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ListID'], ['productivity.lists.ListID'], ),
    sa.ForeignKeyConstraint(['ProjectID'], ['productivity.projects.ProjectID'], ),
    sa.PrimaryKeyConstraint('ListID', 'ProjectID'),
    schema='productivity'
    )
    op.create_table('task_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('color', sa.String(length=20), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['productivity.task_type_groups.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='productivity'
    )
    op.create_table('subscription_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('price', sa.DECIMAL(precision=10, scale=2), nullable=True),
    sa.Column('access_level_id', sa.Integer(), nullable=True),
    sa.Column('duration_days', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['access_level_id'], ['users.access_levels.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='users'
    )
    op.create_table('tasks',
    sa.Column('TaskID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('Title', sa.String(length=255), nullable=True),
    sa.Column('Start', sa.DateTime(), nullable=True),
    sa.Column('Deadline', sa.DateTime(), nullable=True),
    sa.Column('IsBackground', sa.Boolean(), nullable=True),
    sa.Column('EndDate', sa.DateTime(), nullable=True),
    sa.Column('Attachments', sa.String(length=255), nullable=True),
    sa.Column('Note', sa.Text(), nullable=True),
    sa.Column('ChildesOrder', sa.JSON(), nullable=True),
    sa.Column('Color', sa.String(length=20), nullable=True),
    sa.Column('TaskTypeID', sa.Integer(), nullable=True),
    sa.Column('StatusID', sa.Integer(), nullable=True),
    sa.Column('PriorityID', sa.Integer(), nullable=True),
    sa.Column('IntervalID', sa.Integer(), nullable=True),
    sa.Column('IsInfinite', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['IntervalID'], ['productivity.intervals.IntervalID'], ),
    sa.ForeignKeyConstraint(['PriorityID'], ['productivity.priorities.PriorityID'], ),
    sa.ForeignKeyConstraint(['StatusID'], ['productivity.statuses.StatusID'], ),
    sa.ForeignKeyConstraint(['TaskTypeID'], ['productivity.task_types.id'], ),
    sa.PrimaryKeyConstraint('TaskID'),
    schema='productivity'
    )
    op.create_table('user_subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('plan_id', sa.Integer(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['plan_id'], ['users.subscription_plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.users.user_id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='users'
    )
    op.create_table('anti_schedule',
    sa.Column('AntiTaskID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('TaskID', sa.Integer(), nullable=True),
    sa.Column('Title', sa.String(length=255), nullable=True),
    sa.Column('Start', sa.DateTime(), nullable=True),
    sa.Column('End', sa.DateTime(), nullable=True),
    sa.Column('Note', sa.Text(), nullable=True),
    sa.Column('Color', sa.String(length=20), nullable=True),
    sa.Column('TaskTypeID', sa.Integer(), nullable=True),
    sa.Column('StatusID', sa.Integer(), nullable=True),
    sa.Column('IsBackground', sa.Boolean(), nullable=True),
    sa.Column('Files', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['StatusID'], ['productivity.statuses.StatusID'], ),
    sa.ForeignKeyConstraint(['TaskID'], ['productivity.tasks.TaskID'], ),
    sa.ForeignKeyConstraint(['TaskTypeID'], ['productivity.task_types.id'], ),
    sa.PrimaryKeyConstraint('AntiTaskID'),
    schema='productivity'
    )
    with op.batch_alter_table('anti_schedule', schema='productivity') as batch_op:
        batch_op.create_index('ix_anti_schedule_start', ['Start'], unique=False)
        batch_op.create_index('ix_anti_schedule_user_id', ['user_id'], unique=False)

    op.create_table('task_list_relations',
    sa.Column('TaskID', sa.Integer(), nullable=False),
    sa.Column('ListID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ListID'], ['productivity.lists.ListID'], ),
    sa.ForeignKeyConstraint(['TaskID'], ['productivity.tasks.TaskID'], ),
    sa.PrimaryKeyConstraint('TaskID', 'ListID'),
    schema='productivity'
    )
    op.create_table('task_overrides',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=False),
    sa.Column('data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['productivity.tasks.TaskID'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='productivity'
    )
    with op.batch_alter_table('task_overrides', schema='productivity') as batch_op:
        batch_op.create_index('idx_task_overrides_taskid_date_userid', ['task_id', 'date', 'user_id'], unique=False)

    op.create_table('task_project_relations',
    sa.Column('TaskID', sa.Integer(), nullable=False),
    sa.Column('ProjectID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['ProjectID'], ['productivity.projects.ProjectID'], ),
    sa.ForeignKeyConstraint(['TaskID'], ['productivity.tasks.TaskID'], ),
    sa.PrimaryKeyConstraint('TaskID', 'ProjectID'),
    schema='productivity'
    )
    op.create_table('task_subtasks_relations',
    sa.Column('TaskID', sa.Integer(), nullable=False),
    sa.Column('SubtaskID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['SubtaskID'], ['productivity.tasks.TaskID'], ),
    sa.ForeignKeyConstraint(['TaskID'], ['productivity.tasks.TaskID'], ),
    sa.PrimaryKeyConstraint('TaskID', 'SubtaskID'),
    schema='productivity'
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task_subtasks_relations', schema='productivity')
    op.drop_table('task_project_relations', schema='productivity')
    with op.batch_alter_table('task_overrides', schema='productivity') as batch_op:
        batch_op.drop_index('idx_task_overrides_taskid_date_userid')

    op.drop_table('task_overrides', schema='productivity')
    op.drop_table('task_list_relations', schema='productivity')
    with op.batch_alter_table('anti_schedule', schema='productivity') as batch_op:
        batch_op.drop_index('ix_anti_schedule_user_id')
        batch_op.drop_index('ix_anti_schedule_start')

    op.drop_table('anti_schedule', schema='productivity')
    op.drop_table('user_subscriptions', schema='users')
    op.drop_table('tasks', schema='productivity')
    op.drop_table('subscription_plans', schema='users')
    op.drop_table('task_types', schema='productivity')
    op.drop_table('list_project_relations', schema='productivity')
    op.drop_table('list_group_relations', schema='productivity')
    op.drop_table('group_project_relations', schema='productivity')
    op.drop_table('journal_files', schema='content')
    op.drop_table('dashboard', schema='workspace')
    op.drop_table('users', schema='users')
    op.drop_table('access_levels', schema='users')
    op.drop_table('task_type_groups', schema='productivity')
    op.drop_table('statuses', schema='productivity')
    op.drop_table('projects', schema='productivity')
    op.drop_table('priorities', schema='productivity')
    op.drop_table('lists', schema='productivity')
    op.drop_table('intervals', schema='productivity')
    op.drop_table('groups', schema='productivity')
    op.drop_table('data_versions', schema='productivity')
    op.drop_table('journal_schemas', schema='content')
    op.drop_table('journal_entries', schema='content')
    op.drop_table('quotes', schema='communication')
    op.drop_table('chat_history', schema='communication')
    # ### end Alembic commands ###
