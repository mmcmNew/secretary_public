name: Release Workflow

on:
  push:
    tags:
      - 'v*.*.*' # More specific tag pattern, can be adjusted to 'v*' if needed

jobs:
  test:
    name: Run Python Tests
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: secretary
          POSTGRES_PASSWORD: secretary
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest psycopg2-binary
          if [ -f server/requirements.txt ]; then pip install -r server/requirements.txt; fi
      - name: Create Test Database
        run: python server/create_test_db.py
      - name: Test with pytest
        env:
          TEST_DATABASE_URL: 'postgresql+psycopg2://secretary:secretary@localhost:5432/secretary_test_db'
          FLASK_ENV: 'testing'
        run: |
          pytest server/app/tests/

  build_and_push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test # This job depends on the 'test' job passing
    permissions:
      contents: read
      packages: write # Needed for pushing to GitHub Packages, if applicable
    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/secretary-app # Unified secret name
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json

      - name: Install client dependencies
        working-directory: ./client
        run: npm ci

      - name: Build client
        working-directory: ./client
        run: npm run build

      - name: Copy client dist to server/app/static # Assuming 'static' is correct
        run: |
          rm -rf server/app/static || true
          mkdir -p server/app/static
          cp -a client/dist/. server/app/static/

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile # Assuming 'Dockerfile' is correct
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE_NAME }}:${{ github.ref_name }}
            ${{ env.IMAGE_NAME }}:latest
